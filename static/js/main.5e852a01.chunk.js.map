{"version":3,"sources":["Pages/Login.js","config/Fire.js","Components/DisplayContact.js","SubPages/DisplayContacts.js","SubPages/NewContact.js","Pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","emailKeyUp","e","setState","email","target","value","passwordKeyUp","password","handleSubmit","preventDefault","firebase","auth","signInWithEmailAndPassword","state","catch","error","sendError","bind","assertThisInitialized","react_default","a","createElement","className","onSubmit","Grid_default","Input_default","type","name","onKeyUp","Button_default","Component","fire","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","DisplayContact","contact","DisplayContacts","NewContact","onNewContact","onClick","variant","color","index_es","icon","contacts","map","contact_data","Components_DisplayContact","cancelNewContact","onCancelContact","handleAddition","onAddContact","nameKeyUp","phoneNumberKeyUp","phoneNumber","notesKeyUp","notes","TextField_default","multiline","Home","handleAddContact","newContacts","push","handleNewContact","handleCancelContact","logout","signOut","SubPages_DisplayContacts","SubPages_NewContact","library","add","faPlusSquare","App","user","authListener","_this2","onAuthStateChanged","Pages_Home","Pages_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e852a01.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  emailKeyUp = (e) => {\n    this.setState({email: e.target.value});\n  };\n\n  passwordKeyUp = (e) => {\n    this.setState({password: e.target.value});\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).catch(function(error) {\n      if (error)\n        this.sendError();\n    }.bind(this));\n  };\n\n  sendError = () => {\n    this.setState({error: true});\n  };\n\n  render() {\n    return (\n      <div className=\"login\">\n        <h1>Login:</h1>\n        <form onSubmit={this.handleSubmit}>\n          <Grid className=\"grid\">\n          <label>\n            <span className=\"label\">Email:</span>\n            <Input type=\"text\" name=\"email\" onKeyUp={this.emailKeyUp} />\n          </label>\n          </Grid>\n          <Grid className=\"grid\">\n          <label>\n            <span className=\"label\">Password:</span>\n            <Input type=\"password\" name=\"password\" onKeyUp={this.passwordKeyUp} />\n          </label>\n          </Grid>\n          {this.state.error ? (\n            <Grid className=\"error\">\n              The email/password you entered is incorrect.\n            </Grid>\n          ): null}\n          <Grid className=\"grid\">\n          <Button type=\"submit\" className=\"loginButton\" >Login</Button>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import firebase from \"firebase\";\nconst config = {\n  apiKey: \"AIzaSyAWaDqjYK6iuFAKa50p_EvyQK_TzyEHRj0\",\n  authDomain: \"jan19-side.firebaseapp.com\",\n  databaseURL: \"https://jan19-side.firebaseio.com\",\n  projectId: \"jan19-side\",\n  storageBucket: \"jan19-side.appspot.com\",\n  messagingSenderId: \"1079823639348\"\n};\nconst fire = firebase.initializeApp(config);\nexport default fire;\n","import React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport fire from '../config/Fire';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Button from '@material-ui/core/Button';\n\nclass DisplayContact extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"contact\">\n        {this.props.contact.name}\n      </div>\n    );\n  }\n}\n\nexport default DisplayContact;\n","import React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport fire from '../config/Fire';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Button from '@material-ui/core/Button';\nimport DisplayContact from '../Components/DisplayContact';\n\nclass DisplayContacts extends Component {\n  constructor(props){\n    super(props);\n    //this.emailKeyUp = this.emailKeyUp.bind(this);\n  }\n\n  NewContact = () => {\n    this.props.onNewContact();\n  };\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.NewContact} variant=\"contained\" color=\"primary\">\n          <FontAwesomeIcon icon=\"plus-square\" />\n          <label>Create contact</label>\n        </Button>\n        {this.props.contacts.map(contact_data => {\n          return (\n            <DisplayContact contact={contact_data} />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default DisplayContacts;\n","import React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport fire from '../config/Fire';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass NewContact extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      name: \"\",\n      phoneNumber: \"\",\n      email: \"\",\n      notes: \"\",\n    };\n    this.handleAddition = this.handleAddition.bind(this);\n    //this.emailKeyUp = this.emailKeyUp.bind(this);\n  }\n\n  cancelNewContact = () => {\n    this.props.onCancelContact();\n  };\n\n  handleAddition = (e) => {\n    e.preventDefault();\n    this.props.onAddContact(this.state);\n  };\n\n  nameKeyUp = (e) => {\n    this.setState({name: e.target.value});\n  };\n\n  emailKeyUp = (e) => {\n    this.setState({email: e.target.value});\n  };\n\n  phoneNumberKeyUp = (e) => {\n    this.setState({phoneNumber: e.target.value});\n  };\n\n  notesKeyUp = (e) => {\n    this.setState({notes: e.target.value});\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>NewContact</h2>\n        <form onSubmit={this.handleAddition}>\n          <Grid className=\"grid\">\n          <label>\n            Name:\n            <Input type=\"text\" name=\"name\" onKeyUp={this.nameKeyUp} />\n          </label>\n          </Grid>\n          <Grid className=\"grid\">\n          <label>\n            Email:\n            <Input type=\"text\" name=\"email\" onKeyUp={this.emailKeyUp} />\n          </label>\n          </Grid>\n          <Grid className=\"grid\">\n          <label>\n            Phone number:\n            <Input type=\"text\" name=\"phoneNumber\" onKeyUp={this.phoneNumberKeyUp} />\n          </label>\n          </Grid>\n          <Grid className=\"grid\">\n          <label>\n            Notes:\n            <TextField multiline={true} type=\"text\" name=\"notes\" onKeyUp={this.notesKeyUp} />\n          </label>\n          </Grid>\n          <Input type=\"submit\" value=\"Submit\" />\n        </form>\n        <Button onClick={this.cancelNewContact}>Cancel</Button>\n      </div>\n    );\n  }\n}\n\nexport default NewContact;\n","import React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport fire from '../config/Fire';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport DisplayContacts from '../SubPages/DisplayContacts';\nimport NewContact from '../SubPages/NewContact';\nimport Button from '@material-ui/core/Button';\n\nclass Home extends Component {\n  constructor(props){\n    super(props);\n    this.logout = this.logout.bind(this);\n    this.state = {\n      DisplayContacts: true,\n      contacts: []\n    };\n    //this.emailKeyUp = this.emailKeyUp.bind(this);\n    //this.handleNewContact = this.handleNewContact.bind(this);\n    //this.handleCancelContact = this.handleCancelContact.bind(this);\n    this.handleAddContact = this.handleAddContact.bind(this);\n  }\n\n  logout(){\n    fire.auth().signOut();\n  }\n\n  handleAddContact = (contact) => {\n    let newContacts = this.state.contacts;\n    newContacts.push(contact);\n    this.setState({contacts: newContacts, DisplayContacts: true});\n  };\n\n  handleNewContact = () => {\n    this.setState({DisplayContacts: false});\n  };\n\n  handleCancelContact = () => {\n    this.setState({DisplayContacts: true});\n  };\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.logout} variant=\"contained\" color=\"secondary\">\n          Logout\n        </Button>\n        {this.state.DisplayContacts ? (<DisplayContacts contacts={this.state.contacts} onNewContact={this.handleNewContact}/>) : (<NewContact onAddContact={this.handleAddContact} onCancelContact={this.handleCancelContact}/>)}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport Login from './Pages/Login.js';\nimport Home from './Pages/Home.js';\nimport fire from './config/Fire';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faPlusSquare)\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user:{},\n    }\n  }\n\n  componentDidMount(){\n    this.authListener();\n  }\n\n  authListener(){\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({user});\n      } else {\n        this.setState({user: null});\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.user ? (<Home />) : (<Login/>)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}